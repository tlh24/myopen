CPP = clang++-3.8

LINK=clang++-3.8

CPPFLAGS += -Wall -Wextra -pedantic -Wshadow
CPPFLAGS += -std=c++11 -Wno-int-to-pointer-cast -Wtrigraphs
CPPFLAGS += -Wstrict-overflow -fno-strict-aliasing
CPPFLAGS += -Wcast-align -Wpointer-arith -Wsign-compare
CPPFLAGS += -Wformat=2 -Wno-format-y2k -Wmissing-braces -Wparentheses
CPPFLAGS += -Wno-missing-field-initializers -Wno-format-nonliteral
#CPPFLAGS += -Wno-deprecated-declarations -stdlib=libstdc++
CPPFLAGS += -Wno-braced-scalar-init -Wno-unused-result -Wthread-safety

CPPFLAGS += -DKHZ_24
LDFLAGS  += -lpthread

CPPFLAGS += -O3 -fslp-vectorize-aggressive -march=native
CPPFLAGS += -DJACK

LDFLAGS  += -lprofiler -ltcmalloc

#CPPFLAGS += -O0 -g -DDEBUG
#CPPFLAGS += -fno-inline -fno-omit-frame-pointer
#LDFLAGS  += -fno-inline -fno-omit-frame-pointer
#CPPFLAGS += -fsanitize=address
#LDFLAGS  += -fsanitize=address
#CPPFLAGS += -fsanitize=memory -fPIE -pie
#LDFLAGS  += -fsanitize=memory -fPIE -pie

# these are to analyize automatic loop vectorization failures
#CPPFLAGS += -Rpass=loop-vectorize
#CPPFLAGS += -Rpass-analysis=loop-vectorize
#CPPFLAGS += -Rpass-missed=loop-vectorized

!cpp = |> ^ CPP %f^ $(CPP) -c $(CPPFLAGS) %f -o %o |>
#!cpp = |> $(CPP) -c $(CPPFLAGS) %f -o %o |>
!ld = |> ^ LINK %o^ $(CPP) %f -o %o $(LDFLAGS) |>
#!ld = |> $(CPP) %f -o %o $(LDFLAGS) |>
!protoc = |> ^ PROTOC %f^ protoc --cpp_out=. %f |>
