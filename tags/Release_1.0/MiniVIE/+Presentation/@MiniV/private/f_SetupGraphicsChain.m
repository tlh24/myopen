function f_SetupGraphicsChain

set(gcf,'DoubleBuffer','on');
set(gcf,'Renderer','zbuffer');
% Set axis limits and view
view(3); axis equal; grid on
% Define a hierarchy of hgtransform objects. 
t(1) = hgtransform; %% Chest
t(2) = hgtransform('parent',t(1)); %% UpperArm
t(3) = hgtransform('parent',t(2)); %% ForeArm
t(4) = hgtransform('parent',t(3)); %% Hand

skin = [.95 .87 .73];

% Create Patches
[vertices,faces] = ArmData01;
p(1) = patch(...
    'Tag','Shoulder',...
    'Parent',t(1),...
    'Clipping','off',...
    'FaceColor',skin,...
    'EdgeColor','none',...
    'Faces',faces,...
    'Vertices',vertices);

[vertices,faces] = ArmData02;
p(2) = patch(...
    'Tag','UpperArm',...
    'Parent',t(2),...
    'Clipping','off',...
    'FaceColor',skin,...
    'EdgeColor','none',...
    'Faces',faces,...
    'Vertices',vertices);

[vertices,faces] = ArmData03;
p(3) = patch(...
    'Tag','ForeArm',...
    'Parent',t(3),...
    'Clipping','off',...
    'FaceColor',skin,...
    'EdgeColor','none',...
    'Faces',faces,...
    'Vertices',vertices);

[vertices,faces] = ArmData04;
p(4) = patch(...
    'Tag','Wrist',...
    'Parent',t(4),...
    'Clipping','off',...
    'FaceColor',skin,...
    'EdgeColor','none',...
    'Faces',faces,...
    'Vertices',vertices);

%% Make triad
Triad(1) = hgtransform;
Triad(2) = hgtransform('Parent',Triad(1));
Triad(3) = hgtransform('Parent',Triad(2));
Triad(4) = hgtransform('Parent',Triad(3));
s = 0.1;
line([0 s],[0 0],[0 0],'Color',[1 0 0],'LineWidth',2,'Parent',Triad(1));
line([0 0],[0 s],[0 0],'Color',[0 1 0],'LineWidth',2,'Parent',Triad(1));
line([0 0],[0 0],[0 s],'Color',[0 0 1],'LineWidth',2,'Parent',Triad(1));

c = copyobj(Triad(1),Triad(2:4));
copyobj(Triad(1),Triad(3));
copyobj(Triad(1),Triad(4));


%% Define Shoulder Joint
Pxyz = ([0.0729    0.6025   -0.0464] + [0.0769    0.5931    0.0104])./2;
Rot = [0 0 -55].*pi/180; %radians
%% Local Coordinate System of Shoulder
UD.Joint_CS = makehgtform('translate',Pxyz,'xrotate',Rot(1),'yrotate',Rot(2),'zrotate',Rot(3))
set(t(2),'Matrix',UD.Joint_CS*Joint_TF*inv(UD.Joint_CS));
set(p(2),'UserData',UD)

%% Define Shoulder Angulation
Joint_TF = makehgtform
set(t(2),'Matrix',UD.Joint_CS*Joint_TF*inv(UD.Joint_CS));

axis tight
camlight left
lighting phong
material dull
view(2)
